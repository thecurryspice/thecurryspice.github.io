---
---

@ARTICLE{9211770,
  author={Baranwal, Akhil Raj and Ullah, Salim and Sahoo, Siva Satyendra and Kumar, Akash},
  journal={IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems}, 
  title={ReLAccS: A Multilevel Approach to Accelerator Design for Reinforcement Learning on FPGA-Based Systems}, 
  year={2021},
  volume={40},
  number={9},
  pages={1754-1767},
  keywords={Optimization;Memory management;Power dissipation;Decision making;Embedded systems;Field programmable gate arrays;Micromechanical devices;Cross-layer system design;embedded systems;field-programmable gate array (FPGA);high-level synthesis;reinforcement learning (RL)},
  doi={10.1109/TCAD.2020.3028350},
  selected={true},
  abbr = {ReLAccS}
}

@inproceedings{10.1145/3453688.3461533,
author = {Sahoo, Siva Satyendra and Baranwal, Akhil Raj and Ullah, Salim and Kumar, Akash},
title = {MemOReL: A <u>Mem</u>ory-oriented <u>O</u>ptimization Approach to <u>Re</u>inforcement <u>L</u>earning on FPGA-based Embedded Systems},
year = {2021},
isbn = {9781450383936},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3453688.3461533},
doi = {10.1145/3453688.3461533},
abstract = {Reinforcement Learning (RL) represents the machine learning method that has come closest to showing human-like learning. While Deep RL is becoming increasingly popular for complex applications such as AI-based gaming, it has a high implementation cost in terms of both power and latency. Q-Learning, on the other hand, is a much simpler method that makes it more feasible for implementation on resource-constrained embedded systems for control and navigation. However, the optimal policy search in Q-Learning is a compute-intensive and inherently sequential process and a software-only implementation may not be able to satisfy the latency and throughput constraints of such applications. To this end, we propose a novel accelerator design with multiple design trade-offs for implementing Q-Learning on FPGA-based SoCs. Specifically, we analyze the various stages of the Epsilon-Greedy algorithm for RL and propose a novel microarchitecture that reduces the latency by optimizing the memory access during each iteration. Consequently, we present multiple designs that provide varying trade-offs between performance, power dissipation, and resource utilization of the accelerator. With the proposed approach, we report considerable improvement in throughput with lower resource utilization over state-of-the-art design implementations.},
booktitle = {Proceedings of the 2021 Great Lakes Symposium on VLSI},
pages = {339â€“346},
numpages = {8},
keywords = {energy-efficient computing, fpga, hardware accelerators, high-level synthesis, memory-centric computing},
location = {Virtual Event, USA},
series = {GLSVLSI '21},
abbr = {MemOReL}
}

@article{Baranwal_2021,
doi = {10.1149/2162-8777/abdc15},
url = {https://dx.doi.org/10.1149/2162-8777/abdc15},
year = {2021},
month = {feb},
publisher = {IOP Publishing},
volume = {10},
number = {2},
pages = {027001},
author = {Baranwal, Akhil Raj and Dudala, Sohan and Rewatkar, Prakash and Mohan, Jaligam Murali and Salve, Mary and Goel, Sanket},
title = {Development of Completely Automated Poly Potential Portable Potentiostat},
journal = {ECS Journal of Solid State Science and Technology},
abstract = {Various research activities related to profiling chemicals employ detection or measurement of the response from a specimen in terms of electric fields or currents. Hence, a portable poly-potential device forms one of the necessary measuring equipment essential to these domains. This work aims to propose a Poly-Potential Portable Potentiostat (P4), that can perform electrochemical analysis of solutions through easily integrable data-acquisition hardware and flexible software post-processing. The P4 device is based on a commercial development board, which provides an analog front-end (AFE) for working with 2-lead and 3-lead amperometric cells. An economical and portable design approach is prioritised while keeping the basic functions of the research-grade commercial instruments. A novel technique of dynamically changing the bias and reference potential is used to achieve a finer resolution, enabling qualitative estimation. P4 works by performing detailed mathematical post-processing on-board and therefore relies on hardware integrity as much as on software flexibility. Calibration of P4 was done using a standardised solution to function independently of any external hardware or software tools. P4 makes electrochemical analysis truly portable in remote or resource-constrained applications.},
abbr = {P4}
}

@article{10.1145/3676849,
author = {Khatti, Moazin and Tian, Xingyu and Sedigh Baroughi, Ahmad and Raj Baranwal, Akhil and Chi, Yuze and Guo, Licheng and Cong, Jason and Fang, Zhenman},
title = {PASTA: Programming and Automation Support for Scalable Task-Parallel HLS Programs on Modern Multi-Die FPGAs},
year = {2024},
issue_date = {September 2024},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {17},
number = {3},
issn = {1936-7406},
url = {https://doi.org/10.1145/3676849},
doi = {10.1145/3676849},
abstract = {In recent years, the adoption of FPGAs in datacenters has increased, with a growing number of users choosing High-Level Synthesis (HLS) as their preferred programming method. While HLS simplifies FPGA programming, one notable challenge arises when scaling up designs for modern datacenter FPGAs that comprise multiple dies. The extra delays introduced due to die crossings and routing congestion can significantly degrade the frequency of large designs on these FPGA boards. Due to the gap between HLS design and physical design, it is challenging for HLS programmers to analyze and identify the root causes, and fix their HLS design to achieve better timing closure. Recent efforts have aimed to address these issues by employing coarse-grained floorplanning and pipelining strategies on task-parallel HLS designs where multiple tasks run concurrently and communicate through FIFO stream channels. However, many applications are not streaming friendly and many existing accelerator designs heavily rely on buffer channel based communication between tasks.In this work, we take a step further to support a task-parallel programming model where tasks can communicate via both FIFO stream channels and buffer channels. To achieve this goal, we design and implement the PASTA framework, which takes a large task-parallel HLS design as input and automatically generates a high-frequency FPGA accelerator via HLS and physical design co-optimization. Our framework introduces a latency-insensitive buffer channel design, which supports memory partitioning and ping-pong buffering while remaining compatible with vendor HLS tools. On the frontend, we provide an easy-to-use programming model for utilizing the proposed buffer channel; while on the backend, we implement efficient placement and pipelining strategies for the proposed buffer channel. To validate the effectiveness of our framework, we test it on four widely used Rodinia HLS benchmarks and two real-world accelerator designs and show an average frequency improvement of 25\%, with peak improvements of up to 89\% on AMD/Xilinx Alveo U280 boards compared to Vitis HLS baselines.},
journal = {ACM Trans. Reconfigurable Technol. Syst.},
month = sep,
articleno = {42},
numpages = {31},
keywords = {Multi-die FPGA, high-level synthesis, task-parallel programming, buffer channel, hardware acceleration, frequency optimization, coarse-grained floorplanning},
selected = {true},
abbr = {PASTA}
}
